@page "/prayerAudio"
@inject AppBibleNew.Service.AudioService audioService

<div class="p-4 bg-dark text-white rounded">
    <h3>🙏 Nhạc cầu nguyện</h3>

    <div class="text-center my-3">
        <button class="btn btn-light btn-lg rounded-circle px-4" @onclick="PlayPause">
            @(isPlaying ? "⏸" : "▶")
        </button>
    </div>

    <!-- Thanh tiến trình -->
    <div class="mt-3">
        <input type="range" min="0" max="1" step="0.01" value="@progress"
               @oninput="OnSeek" style="width:100%" />
        <div class="text-center small">
            @TimeSpan.FromSeconds(audioService.CurrentPosition).ToString(@"mm\:ss") /
            @TimeSpan.FromSeconds(audioService.Duration).ToString(@"mm\:ss")
        </div>
    </div>

    <!-- Âm lượng + Next/Prev -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <button class="btn btn-outline-light" @onclick="Prev">⏮</button>

        <div class="flex-grow-1 px-3">
            <input type="range" min="0" max="1" step="0.1" value="@volume"
                   @oninput="OnVolumeChanged" style="width:100%" />
        </div>

        <button class="btn btn-outline-light" @onclick="Next">⏭</button>
    </div>
</div>

@code {
    double volume = 1;
    double progress = 0;
    bool isPlaying;

    protected override void OnInitialized()
    {
        audioService.OnPositionChanged += Refresh;

        // Playlist cho trang Prayer
        audioService.SetPlaylist(new List<string>
        {
            "wwwroot/audio/Prayer 1.mp3",
        });
    }

    void Refresh()
    {
        progress = audioService.Duration > 0
            ? audioService.CurrentPosition / audioService.Duration
            : 0;
        isPlaying = audioService.IsPlaying;
        InvokeAsync(StateHasChanged);
    }

    void PlayPause()
    {
        if (audioService.IsPlaying) audioService.Pause();
        else audioService.Play();
    }

    void Next() => audioService.Next();
    void Prev() => audioService.Previous();

    void OnVolumeChanged(ChangeEventArgs e)
    {
        if (double.TryParse(e.Value?.ToString(), out var v))
        {
            volume = v;
            audioService.SetVolume(v);
        }
    }

    void OnSeek(ChangeEventArgs e)
    {
        if (double.TryParse(e.Value?.ToString(), out var v))
            audioService.Seek(v);
    }
}
